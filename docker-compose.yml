version: '3.3'
services:
  db-users:
    image: postgres:latest
    container_name: dungeon-game-db-users
    restart: always
    environment:
      POSTGRES_DB: ${DB_USER_POSTGRES_DB}
      POSTGRES_USER: ${DB_USER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_USER_POSTGRES_PASSWORD}
    ports:
      - '${DB_USER_PORT}:5432'
    volumes:
      - db-users-data:/var/lib/postgresql/data
    networks:
      - dungeon-game

  db-heroes:
    image: postgres:latest
    container_name: dungeon-game-db-heroes
    restart: always
    environment:
      POSTGRES_DB: ${DB_HEROES_POSTGRES_DB}
      POSTGRES_USER: ${DB_HEROES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_HEROES_POSTGRES_PASSWORD}
    ports:
      - '${DB_HEROES_PORT}:5432'
    volumes:
      - db-heroes-data:/var/lib/postgresql/data
    networks:
      - dungeon-game

  dungeon-game-frontend-service:
    image: node:23-bullseye
    container_name: dungeon-game-frontend-service
    ports:
       - "${SERVICE_FRONTEND_PORT}:8080"
    volumes:
      - ./frontend-service:/app
    working_dir: /app/app
    command: sh -c "npm install && npm run start"
    restart: always

  dungeon-game-service-users:
    build:
      context: ./users-service
    container_name: dungeon-game-service-users
    environment:  
      - SPRING_DATASOURCE_URL=${SERVICE_USERS_SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SERVICE_USERS_SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SERVICE_USERS_SPRING_DATASOURCE_PASSWORD}
      - SECURITY_JWT_SECRET_KEY=${SERVICE_USERS_SECURITY_JWT_SECRET_KEY}
      - SECURITY_JWT_EXPIRATION_TIME=${SERVICE_USERS_SECURITY_JWT_EXPIRATION_TIME}
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq
      - SPRING_RABBITMQ_PORT=${SPRING_RABBITMQ_SEND_PORT}
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    restart: always
    ports:
      - '${SERVICE_USERS_PORT}:8080'
    depends_on:
      - dungeon-game-rabbitmq
      - db-users
    networks:
      - dungeon-game

  dungeon-game-service-fight:
    build:
      context: ./fight-service
    restart: always
    container_name: dungeon-game-service-fight
    environment:  
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq
      - SPRING_RABBITMQ_PORT=${SPRING_RABBITMQ_SEND_PORT}
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - '${SERVICE_FIGHT_PORT}:8080'
    depends_on:
      - dungeon-game-rabbitmq
    networks:
      - dungeon-game

  dungeon-game-heroes-service:
    build:
      context: ./heroes-service
    container_name: dungeon-game-heroes-service
    environment:  
      - SPRING_DATASOURCE_URL=${SERVICE_HEROES_SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SERVICE_HEROES_SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SERVICE_HEROES_SPRING_DATASOURCE_PASSWORD}
      - SERVICE_HEROES_PORT=${SERVICE_HEROES_PORT}
      - SERVICE_HEROES_HOST=${SERVICE_HOST}
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq
      - SPRING_RABBITMQ_PORT=${SPRING_RABBITMQ_SEND_PORT}
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "${SERVICE_HEROES_PORT}:8080"
    depends_on:
      - db-heroes
    networks:
      - dungeon-game

  dungeon-game-monsters-service:
    build:
      context: ./monsters-service
    container_name: dungeon-game-monsters-service
    ports:
      - "${SERVICE_MONSTERS_PORT}:8080"
    networks:
      - dungeon-game

  dungeon-game-dungeon-service:
    image: node:23-bullseye
    container_name: dungeon-game-dungeon-service
    environment:  
      - SERVICE_DUNGEON_PORT=${SERVICE_DUNGEON_PORT}
      - SERVICE_DUNGEON_HOST=${SERVICE_HOST}
    ports:
      - "${SERVICE_DUNGEON_PORT}:3000"
    volumes:
      - ./dungeons-service:/app
    working_dir: /app
    command: sh -c "npm install && npm run start"
    restart: always
    
  dungeon-game-rabbitmq:
    image: rabbitmq:3.9-management
    restart: always
    ports:
      - '${SPRING_RABBITMQ_SEND_PORT}:5672'
      - '${SPRING_RABBITMQ_VIEW_PORT}:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - dungeon-game

volumes:
  db-users-data:
  db-heroes-data:
  rabbitmq_data:
  rabbitmq_log:

networks:
  dungeon-game: