services:
  dungeon-game-db-users:
    image: postgres:latest
    container_name: dungeon-game-db-users
    environment:
      POSTGRES_DB: ${DB_USERS_POSTGRES_DB}
      POSTGRES_USER: ${DB_USERS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_USERS_POSTGRES_PASSWORD}
    ports:
      - '${DB_USERS_PORT}:5432'
    volumes:
      - dungeon-game-db-users-data:/var/lib/postgresql/data
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-db-heroes:
    image: postgres:latest
    container_name: dungeon-game-db-heroes
    environment:
      POSTGRES_DB: ${DB_HEROES_POSTGRES_DB}
      POSTGRES_USER: ${DB_HEROES_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_HEROES_POSTGRES_PASSWORD}
    ports:
      - '${DB_HEROES_PORT}:5432'
    volumes:
      - dungeon-game-db-heroes-data:/var/lib/postgresql/data
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-frontend-service:
    image: node:23-bullseye
    container_name: dungeon-game-frontend-service
    environment:
      - REACT_APP_BACKEND_SOCKET_URL=ws://localhost:${SERVICE_BACKEND_PORT}
      - REACT_APP_USERS_SERVICE_URL=http://localhost:${SERVICE_USERS_PORT}
      - REACT_APP_FIGHTS_SERVICE_URL=http://localhost:${SERVICE_FIGHTS_PORT}
      - REACT_APP_HEROES_SERVICE_URL=http://localhost:${SERVICE_HEROES_PORT}
      - REACT_APP_DUNGEONS_SERVICE_URL=http://localhost:${SERVICE_DUNGEONS_PORT}
      - REACT_APP_MONSTERS_SERVICE_URL=http://localhost:${SERVICE_MONSTERS_PORT}
    ports:
       - "${SERVICE_FRONTEND_PORT}:3000"
    volumes:
      - ./frontend-service:/app
    working_dir: /app/app
    command: sh -c "npm install && npm run start"
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-backend-service:
    image: node:23-bullseye
    container_name: dungeon-game-backend-service
    environment:
      - FRONTEND_HOST=localhost:${SERVICE_FRONTEND_PORT}
      - RABBITMQ_HOST=dungeon-game-rabbitmq-service
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${SPRING_RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "${SERVICE_BACKEND_PORT}:3000"
    depends_on:
      - dungeon-game-rabbitmq-service
    volumes:
      - ./backend-service:/app
    working_dir: /app
    command: sh -c "npm install && npm run start"
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-users-service:
    build:
      context: ./users-service
    container_name: dungeon-game-users-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dungeon-game-db-users:5432/${DB_USERS_POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${DB_USERS_POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_USERS_POSTGRES_PASSWORD}
      - SECURITY_JWT_SECRET_KEY=${SERVICE_USERS_SECURITY_JWT_SECRET_KEY}
      - SECURITY_JWT_EXPIRATION_TIME=${SERVICE_USERS_SECURITY_JWT_EXPIRATION_TIME}
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq-service
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - '${SERVICE_USERS_PORT}:8080'
    depends_on:
      - dungeon-game-db-users
      - dungeon-game-rabbitmq-service
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-fights-service:
    build:
      context: ./fights-service
    container_name: dungeon-game-fights-service
    environment:
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq-service
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - '${SERVICE_FIGHTS_PORT}:8080'
    depends_on:
      - dungeon-game-rabbitmq-service
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-heroes-service:
    build:
      context: ./heroes-service
    container_name: dungeon-game-heroes-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dungeon-game-db-heroes:5432/${DB_HEROES_POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${DB_HEROES_POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_HEROES_POSTGRES_PASSWORD}
      - SERVICE_HEROES_HOST=localhost
      - SERVICE_HEROES_PORT=${SERVICE_HEROES_PORT}
      - SPRING_RABBITMQ_HOST=dungeon-game-rabbitmq-service
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}
    ports:
      - "${SERVICE_HEROES_PORT}:8080"
    depends_on:
      - dungeon-game-db-heroes
      - dungeon-game-rabbitmq-service
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-dungeons-service:
    image: node:23-bullseye
    container_name: dungeon-game-dungeons-service
    environment:
      - SERVICE_DUNGEONS_HOST=localhost
      - SERVICE_DUNGEONS_PORT=${SERVICE_DUNGEONS_PORT}
    ports:
      - "${SERVICE_DUNGEONS_PORT}:3000"
    volumes:
      - ./dungeons-service:/app
    working_dir: /app
    command: sh -c "npm install && npm run start"
    networks:
      - dungeon-game-network
    restart: always

  dungeon-game-monsters-service:
    build:
      context: ./monsters-service
    container_name: dungeon-game-monsters-service
    environment:
      - MONSTERS_HOST=http://localhost:${SERVICE_MONSTERS_PORT}
    ports:
      - "${SERVICE_MONSTERS_PORT}:8080"
    networks:
      - dungeon-game-network

  dungeon-game-rabbitmq-service:
    image: rabbitmq:3.9-management
    container_name: dungeon-game-rabbitmq-service
    ports:
      - '${SPRING_RABBITMQ_SEND_PORT}:5672'
      - '${SPRING_RABBITMQ_VIEW_PORT}:15672'
    volumes:
      - dungeon-game-rabbitmq-data:/var/lib/rabbitmq/
      - dungeon-game-rabbitmq-log:/var/log/rabbitmq/
    networks:
      - dungeon-game-network
    restart: always

volumes:
  dungeon-game-db-users-data:
  dungeon-game-db-heroes-data:
  dungeon-game-rabbitmq-data:
  dungeon-game-rabbitmq-log:

networks:
  dungeon-game-network:
